package com.telesign.verify;

import java.io.IOException;
import java.net.URLEncoder;

import com.google.gson.Gson;
import com.telesign.util.PhoneUtil;
import com.telesign.util.TeleSignRequest;
import com.telesign.verify.response.VerifyResponse;


/**
 *	Copyright (c) TeleSign Corporation 2012.
 *	License: MIT
 *	Support email address "support@telesign.com"
 *	Author: jweatherford
 */
public class Verify {
	
	public Verify(String customer_id, String secret_key) {
		this.customer_id = customer_id;
		this.secret_key = secret_key;
	}
	
	/**
	 * Convenience method 
	 * 
	 * @param identifier
	 * @return
	 */
	public VerifyResponse sms(String identifier) {
		return sms(identifier, null, null, null);
	}
	
	/**
	 * Convenience method 
	 * 
	 * @param identifier
	 * @param language
	 * @return
	 */
	public VerifyResponse sms(String identifier, String language) {
		return sms(identifier, language, null, null);
	}
	
	/**
	 * 
	 * @param identifier -- The phone number to send an SMS to
	 * @param language -- set to null for default, english
	 * @param verify_code -- set to null to let Telesign generate the code
	 * @param template -- set to null for default, otherwise must include $$CODE$$ as a variable placeholder
	 * @return
	 */
	public VerifyResponse sms(String identifier, String language, String verify_code, String template) {
		String result = null;
		try {
			String clean_phone = PhoneUtil.formatTo11Digits(identifier);
			TeleSignRequest tr = new TeleSignRequest("https://rest.telesign.com", "/v1/verify/sms", "POST", customer_id, secret_key);
			
			String body = "phone_number=" + URLEncoder.encode(clean_phone, "UTF-8");;
			
			if(language != null) {
				body += "&language=" + URLEncoder.encode(language, "UTF-8");;
			}
			
			if(verify_code != null) {
				body += "&verify_code=" + URLEncoder.encode(verify_code, "UTF-8");;
			}
			
			if(template != null) {
				body += "&template=" + URLEncoder.encode(template, "UTF-8");;
			}
			
			tr.setPostBody(body);
			
			result = tr.executeRequest();
		} catch (IOException e) {
			System.err.println("IOException while executing phoneid API: " + e.getMessage());
		}
		
		Gson gson = new Gson();
		VerifyResponse response = gson.fromJson(result, VerifyResponse.class);
		
		return response;
		
	}
	
	/**
	 * Convenience method
	 * 
	 * @param phone_number Required, teh phone number of the phone to dial
	 * @return
	 */
	public VerifyResponse call(String phone_number) {
		return call(phone_number, null, null, null, 0, null, true);
	}
	
	/**
	 * Convenience method
	 * 
	 * @param phone_number Required, teh phone number of the phone to dial
	 * @param language optional can be null. The language code of the call 
	 * @return
	 */
	public VerifyResponse call(String phone_number, String language) {
		return call(phone_number, language, null, null, 0, null, true);
	}
	
	/**
	 * 
	 * @param phone_number Required, teh phone number of the phone to dial
	 * @param language optional can be null. The language code of the call 
	 * @param verify_code optional. if null, verify code will be generated by telesign
	 * @param verify_method optional. Only available option is currently null (dictated code) or "keypress"
	 * @param extension_type optional. If 0, no extension. if 1, DTMF extension. If 2, voice extension
	 * @param extension_template optional. If null not used. Otherwise the extension to reach 
	 * @param redial optional. Default true
	 * @return
	 */
	public VerifyResponse call(String phone_number, String language, String verify_code, String verify_method, int extension_type, String extension_template, boolean redial) {
		
		String result = null;
		try {
			String clean_phone = PhoneUtil.formatTo11Digits(phone_number);
			TeleSignRequest tr = new TeleSignRequest("https://rest.telesign.com", "/v1/verify/call", "POST", customer_id, secret_key);
			
			String body = "phone_number=" + URLEncoder.encode(clean_phone, "UTF-8");;
			
			if(language != null) {
				body += "&language=" + URLEncoder.encode(language, "UTF-8");;
			}
			
			if(verify_code != null) {
				body += "&verify_code=" + URLEncoder.encode(verify_code, "UTF-8");;
			}
			
			if(verify_method != null && verify_method.equalsIgnoreCase("keypress")) {
				body += "&verify_method=" + URLEncoder.encode(verify_method, "UTF-8");;
			}
			if(extension_type > 0 && extension_type < 3) {
				body += "&extension_type=" + URLEncoder.encode(Integer.toString(extension_type), "UTF-8");;
			}
			if(extension_template != null) {
				body += "&extension_template=" + URLEncoder.encode(extension_template, "UTF-8");;
			}
			if(!redial) { //only set this if it is false
				body += "&redial=" + URLEncoder.encode(Boolean.toString(redial), "UTF-8");;
			}
			
			
			tr.setPostBody(body);
			
			result = tr.executeRequest();
		} catch (IOException e) {
			System.err.println("IOException while executing phoneid API: " + e.getMessage());
		}
		
		Gson gson = new Gson();
		VerifyResponse response = gson.fromJson(result, VerifyResponse.class);
		
		return response;
	}
	
	/**
	 * Return the results of the post referenced by the reference_id
	 * 
	 * @param resource_id the id returned from either requestsSMS or requestCall
	 * @return
	 */
	public VerifyResponse status(String resource_id) {
		String result = null;
		try {
			TeleSignRequest tr = new TeleSignRequest("https://rest.telesign.com", "/v1/verify/" + resource_id, "GET", customer_id, secret_key);
			result = tr.executeRequest();
		} catch (IOException e) {
			System.err.println("IOException while executing phoneid API: " + e.getMessage());
		}
		
		Gson gson = new Gson();
		VerifyResponse response = gson.fromJson(result, VerifyResponse.class);
		
		return response;
	}
	
	
	private final String customer_id;
	private final String secret_key;
}
